/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
// Nguyen Duc Hau 04/10/2024 
package view.quanlynhanvien;
import view.quanlykhachhang.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import dao.KhachHang_DAO;
import dao.NhanVien_DAO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modal.KhachHang;
import modal.NhanVien;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author ADMIN
 */
public class ManHinhQuanLyNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form KhachHang
     */
    public ManHinhQuanLyNhanVien() {
        initComponents();
         docDuLieuVaoBangDSNV();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Gender = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelmaKhachHang = new javax.swing.JLabel();
        jLabeltenKhachHang = new javax.swing.JLabel();
        jLabelsoDienThoai = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jTextFieldtenNhanVien = new javax.swing.JTextField();
        jTextFieldmaNhanVien = new javax.swing.JTextField();
        jTextFieldsoDienThoai = new javax.swing.JTextField();
        jCheckBoxmaNhanVien = new javax.swing.JCheckBox();
        jCheckBoxtenNhanVien = new javax.swing.JCheckBox();
        jCheckBoxsoDienThoai = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldmaNhanVien2 = new javax.swing.JTextField();
        jTextFieldsoDienThoai2 = new javax.swing.JTextField();
        jTextFieldtenNhanVien2 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnXuatFileExcel = new javax.swing.JButton();
        jButtonReSet = new javax.swing.JButton();
        jDateChooserNgaySinh = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jRadioButtonNam = new javax.swing.JRadioButton();
        jRadioButtonNu = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFielddiaChi = new javax.swing.JTextField();
        jScrollPaneKhachHang = new javax.swing.JScrollPane();
        jTableNhanVien = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelmaKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelmaKhachHang.setText("Mã nhân viên:");

        jLabeltenKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabeltenKhachHang.setText("Tên nhân viên:");

        jLabelsoDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelsoDienThoai.setText("Số điện thoại:");

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search (1) (1).png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jTextFieldtenNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldtenNhanVienActionPerformed(evt);
            }
        });

        jTextFieldmaNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldmaNhanVienActionPerformed(evt);
            }
        });

        jTextFieldsoDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldsoDienThoaiActionPerformed(evt);
            }
        });

        jCheckBoxmaNhanVien.setMaximumSize(new java.awt.Dimension(30, 30));
        jCheckBoxmaNhanVien.setMinimumSize(new java.awt.Dimension(30, 30));
        jCheckBoxmaNhanVien.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelmaKhachHang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldmaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxmaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelsoDienThoai)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                        .addComponent(jCheckBoxsoDienThoai))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabeltenKhachHang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldtenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxtenNhanVien))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(btnTimKiem)))))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxmaNhanVien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelmaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldmaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxtenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldtenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabeltenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTimKiem)
                .addGap(38, 38, 38))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Mã nhân viên:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Tên nhân viên:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Số điện thoại:");

        jTextFieldmaNhanVien2.setEditable(false);
        jTextFieldmaNhanVien2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldmaNhanVien2ActionPerformed(evt);
            }
        });

        jTextFieldsoDienThoai2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldsoDienThoai2ActionPerformed(evt);
            }
        });

        jTextFieldtenNhanVien2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldtenNhanVien2ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/update.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xoanew.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoaTrang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xoanew2.png"))); // NOI18N
        btnXoaTrang.setText("Xóa trắng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });

        btnXuatFileExcel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXuatFileExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xuat.png"))); // NOI18N
        btnXuatFileExcel.setText("Xuất file excel");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoaTrang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXuatFileExcel)
                .addGap(12, 12, 12))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnXoaTrang)
                    .addComponent(btnXuatFileExcel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButtonReSet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refesh.png"))); // NOI18N
        jButtonReSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReSetActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Ngày sinh:");

        Gender.add(jRadioButtonNam);
        jRadioButtonNam.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButtonNam.setText("Nam");
        jRadioButtonNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNamActionPerformed(evt);
            }
        });

        Gender.add(jRadioButtonNu);
        jRadioButtonNu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButtonNu.setText("Nữ");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Giới tính:");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Địa chỉ:");

        jTextFielddiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielddiaChiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldmaNhanVien2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldtenNhanVien2, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                    .addComponent(jDateChooserNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jTextFieldsoDienThoai2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(123, 123, 123)
                                        .addComponent(jRadioButtonNam)
                                        .addGap(40, 40, 40)
                                        .addComponent(jRadioButtonNu))
                                    .addComponent(jLabel9)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(63, 63, 63)
                                .addComponent(jTextFielddiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonReSet)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldmaNhanVien2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldsoDienThoai2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonReSet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldtenNhanVien2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jRadioButtonNam)
                    .addComponent(jRadioButtonNu))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFielddiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(66, 66, 66)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jScrollPaneKhachHang.setBackground(new java.awt.Color(255, 255, 255));

        jTableNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã nhân viên", "Tên nhân viên", "Số điện thoại", "Ngày sinh", "Địa chỉ", "Giới tính"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableNhanVien.setRowHeight(40);
        jTableNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableNhanVienMouseClicked(evt);
            }
        });
        jScrollPaneKhachHang.setViewportView(jTableNhanVien);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPaneKhachHang)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableNhanVienMouseClicked
        // TODO add your handling code here:
      // Lấy chỉ số hàng được chọn trong bảng
    int row = jTableNhanVien.getSelectedRow();
    if (row != -1) { // Kiểm tra xem có hàng nào được chọn không
        // Lấy thông tin nhân viên từ bảng và điền vào các trường nhập liệu
        jTextFieldmaNhanVien2.setText(jTableNhanVien.getValueAt(row, 0).toString());
        jTextFieldtenNhanVien2.setText(jTableNhanVien.getValueAt(row, 1).toString());
        jTextFieldsoDienThoai2.setText(jTableNhanVien.getValueAt(row, 2).toString());
        jTextFielddiaChi.setText(jTableNhanVien.getValueAt(row, 4).toString());
        // Lấy ngày sinh từ bảng và đặt vào JDateChooser
        Date ngaySinh = (Date) jTableNhanVien.getValueAt(row, 3); // Giả sử cột thứ 4 chứa ngày sinh
        jDateChooserNgaySinh.setDate(ngaySinh); // Đặt ngày vào JDateChooser

        // Lấy giới tính từ bảng và thiết lập JRadioButton
        String gioiTinh = jTableNhanVien.getValueAt(row, 5).toString(); // Giả sử cột thứ 5 chứa giới tính
        if (gioiTinh.equalsIgnoreCase("Nam")) {
            jRadioButtonNam.setSelected(true); // Đánh dấu JRadioButton cho Nam
        } else if (gioiTinh.equalsIgnoreCase("Nữ")) {
            jRadioButtonNu.setSelected(true); // Đánh dấu JRadioButton cho Nữ
        }
    }
            
    }//GEN-LAST:event_jTableNhanVienMouseClicked

    private void jTextFieldsoDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldsoDienThoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldsoDienThoaiActionPerformed

    private void jTextFieldmaNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldmaNhanVienActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldmaNhanVienActionPerformed

    private void jTextFieldtenNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldtenNhanVienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldtenNhanVienActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        tim();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoa();
        docDuLieuVaoBangDSNV();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        sua();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        them();
    }//GEN-LAST:event_btnThemActionPerformed

    private void jTextFieldtenNhanVien2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldtenNhanVien2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldtenNhanVien2ActionPerformed

    private void jTextFieldsoDienThoai2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldsoDienThoai2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldsoDienThoai2ActionPerformed

    private void jTextFieldmaNhanVien2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldmaNhanVien2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldmaNhanVien2ActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        // TODO add your handling code here:
        xoaTrang();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        // TODO add your handling code here:
       xuatExcel();
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed

    private void jRadioButtonNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonNamActionPerformed

    private void jTextFielddiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielddiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFielddiaChiActionPerformed

    private void jButtonReSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReSetActionPerformed
        // TODO add your handling code here:
        docDuLieuVaoBangDSNV();
//        xoaTrang();
    }//GEN-LAST:event_jButtonReSetActionPerformed
    
// các chỉnh sửa thêm
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Gender;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JButton jButtonReSet;
    private javax.swing.JCheckBox jCheckBoxmaNhanVien;
    private javax.swing.JCheckBox jCheckBoxsoDienThoai;
    private javax.swing.JCheckBox jCheckBoxtenNhanVien;
    private com.toedter.calendar.JDateChooser jDateChooserNgaySinh;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelmaKhachHang;
    private javax.swing.JLabel jLabelsoDienThoai;
    private javax.swing.JLabel jLabeltenKhachHang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButtonNam;
    private javax.swing.JRadioButton jRadioButtonNu;
    private javax.swing.JScrollPane jScrollPaneKhachHang;
    private javax.swing.JTable jTableNhanVien;
    private javax.swing.JTextField jTextFielddiaChi;
    private javax.swing.JTextField jTextFieldmaNhanVien;
    private javax.swing.JTextField jTextFieldmaNhanVien2;
    private javax.swing.JTextField jTextFieldsoDienThoai;
    private javax.swing.JTextField jTextFieldsoDienThoai2;
    private javax.swing.JTextField jTextFieldtenNhanVien;
    private javax.swing.JTextField jTextFieldtenNhanVien2;
    // End of variables declaration//GEN-END:variables
    
// Các hàm
    
// hàm đọc csdl vào bảng
   private void docDuLieuVaoBangDSNV() {
    // Lấy model của jTableKhachHang
    DefaultTableModel defaultTableModel = (DefaultTableModel) jTableNhanVien.getModel();
    
    // Đặt số lượng hàng trong bảng về 0
    defaultTableModel.setRowCount(0);
    
    // Cập nhật lại bảng
    jTableNhanVien.repaint();
    jTableNhanVien.revalidate();
    
    // Khởi tạo DAO để lấy dữ liệu
   
       NhanVien_DAO nhanVienDao= new NhanVien_DAO();
    // Lấy danh sách khách hàng từ DAO
    List<NhanVien> nhanViens = nhanVienDao.getAllNhanVien(); // Đảm bảo rằng phương thức này trả về danh sách khách hàng

     // Thêm từng nhân viên vào model
    for (NhanVien nv : nhanViens) {
        defaultTableModel.addRow(new Object[] {
            nv.getMaNhanVien(),     // Mã nhân viên
            nv.getHo() + " " + nv.getTen(),  // Tên nhân viên (họ và tên)
            nv.getSoDienThoai(),    // Số điện thoại
            nv.getNgaySinh(),       // Ngày sinh
            nv.getDiaChi(),         // Địa chỉ
            nv.getGioiTinh()        // Giới tính
        });
    }
}
public String generateMaNhanVien() {
    String maNhanVienMoi = "";
    NhanVien_DAO nvDao = new NhanVien_DAO();
    String maNhanVienCuoi = nvDao.layMaNhanVienCuoi(); // Lấy mã nhân viên cuối cùng

    if (maNhanVienCuoi == null || maNhanVienCuoi.isEmpty()) {
        maNhanVienMoi = "NV0001"; // Nếu chưa có nhân viên nào, gán mã NV0001
    } else {
        try {
            int soThuTu = Integer.parseInt(maNhanVienCuoi.substring(2)) + 1; // Lấy số sau "NV" và tăng lên 1
            maNhanVienMoi = String.format("NV%04d", soThuTu); // Tạo mã mới theo định dạng NVxxxx (xxxx là số 4 chữ)

            // Kiểm tra mã mới có trùng với mã nhân viên trong CSDL không
            while (!checkMaNhanVien(maNhanVienMoi)) {
                soThuTu++;
                maNhanVienMoi = String.format("NV%04d", soThuTu); // Tiếp tục tăng số nếu mã trùng
            }

        } catch (NumberFormatException e) {
            e.printStackTrace(); // Xử lý lỗi nếu không thể chuyển đổi mã nhân viên
        }
    }
    return maNhanVienMoi; // Trả về mã nhân viên mới
}
private boolean checkMaNhanVien(String maNhanVien) {
    NhanVien_DAO nvDao = new NhanVien_DAO();
    List<NhanVien> danhSachNhanVien = nvDao.getAllNhanVien();

    for (NhanVien nv : danhSachNhanVien) {
        if (nv.getMaNhanVien().equals(maNhanVien)) {
            return false; // Mã nhân viên đã tồn tại
        }
    }
    return true; // Mã nhân viên chưa tồn tại
}

      // hàm thêm
private void them() {
    NhanVien_DAO nhanVienDao = new NhanVien_DAO();
    List<NhanVien> nhanViens = nhanVienDao.getAllNhanVien();

    // Tự động tạo mã nhân viên mới
    String maNhanVien = generateMaNhanVien();

    // Kiểm tra mã nhân viên trùng lặp
    if (!checkMaNhanVien(maNhanVien)) {
        JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại! Vui lòng kiểm tra lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return; // Kết thúc hàm nếu mã đã tồn tại
    }

    // Lấy các thông tin từ giao diện người dùng 
    //9/12
   String tenDayDu = jTextFieldtenNhanVien2.getText().trim(); // Loại bỏ khoảng trắng thừa
String ho = "";
String ten = "";

if (!tenDayDu.isEmpty()) {
    String[] parts = tenDayDu.split(" ", 2); // Tách chuỗi thành hai phần: Họ và phần còn lại
    ho = parts[0]; // Họ là phần đầu tiên
    if (parts.length > 1) {
        ten = parts[1]; // Tên là tất cả ký tự sau họ
    }
}
//
    String sdt = jTextFieldsoDienThoai2.getText(); // Lấy số điện thoại từ trường 'jTextFieldsoDienThoai2'
    String diaChi = jTextFielddiaChi.getText(); // Lấy địa chỉ từ trường 'jTextFielddiaChi'
    
//    // Kiểm tra giới tính từ RadioButton thay vì JComboBox
//    String gioiTinh = jRadioButtonNam.isSelected() ? "Nam" : "Nữ"; 
//
//    
//    // Kiểm tra ngày sinh và tuổi >= 18
//    Date ngaySinh = jDateChooserNgaySinh.getDate();
//     if (ngaySinh == null) {
//        JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày sinh.", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        return; // Kết thúc hàm nếu không chọn ngày sinh
//    }
//    Calendar cal = Calendar.getInstance();
//    cal.setTime(ngaySinh);
//    int namSinh = cal.get(Calendar.YEAR);
//    int namHienTai = Calendar.getInstance().get(Calendar.YEAR);
//
//    if (namHienTai - namSinh < 18) {
//        JOptionPane.showMessageDialog(this, "Nhân viên phải từ 18 tuổi trở lên!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        return;
//    }

    // Kiểm tra đã nhập các trường hay chưa
    if (ten.isEmpty() && sdt.isEmpty() && diaChi.isEmpty() &&  (!jRadioButtonNam.isSelected() && !jRadioButtonNu.isSelected()) &&   jDateChooserNgaySinh.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return; // Dừng hàm nếu còn thiếu thông tin
    }
    
     if (ten.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        jTextFieldtenNhanVien2.requestFocus();
        return; // Dừng hàm nếu tên trống
    }
    
    if (sdt.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Số điện thoại không được để trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        jTextFieldsoDienThoai2.requestFocus();
        return; // Dừng hàm nếu số điện thoại trống
    }
    // Kiểm tra địa chỉ
    if (diaChi.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        jTextFielddiaChi.requestFocus();
        return; // Dừng hàm nếu địa chỉ trống
    }
     // Kiểm tra giới tính từ RadioButton
    String gioiTinh = jRadioButtonNam.isSelected() ? "Nam" : (jRadioButtonNu.isSelected() ? "Nữ" : null);
    if (gioiTinh == null) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn giới tính!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return; // Dừng hàm nếu chưa chọn giới tính
    }

    // Kiểm tra ngày sinh và tuổi >= 18
    Date ngaySinh = jDateChooserNgaySinh.getDate();
    if (ngaySinh == null) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày sinh.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return; // Kết thúc hàm nếu không chọn ngày sinh
    }
    
    Calendar cal = Calendar.getInstance();
    cal.setTime(ngaySinh);
    int namSinh = cal.get(Calendar.YEAR);
    int namHienTai = Calendar.getInstance().get(Calendar.YEAR);

    if (namHienTai - namSinh < 18) {
        JOptionPane.showMessageDialog(this, "Nhân viên phải từ 18 tuổi trở lên!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }
   
    try {
        // Tạo đối tượng NhanVien với các thông tin vừa lấy
        NhanVien nhanVien = new NhanVien();
        nhanVien.setMaNhanVien(maNhanVien);
        nhanVien.setHo(ho);
        nhanVien.setTen(ten);
        nhanVien.setSoDienThoai(sdt);
        nhanVien.setDiaChi(diaChi);
        nhanVien.setGioiTinh(gioiTinh);
        nhanVien.setNgaySinh(ngaySinh);
        

        // Thêm nhân viên vào cơ sở dữ liệu thông qua DAO
        if (nhanVienDao.themNhanVien(nhanVien)) {
            nhanViens.add(nhanVien);
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
            docDuLieuVaoBangDSNV(); // Gọi hàm cập nhật bảng dữ liệu

            // Xóa trắng các trường nhập liệu
            xoaTrang();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thất bại!");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Lỗi nhập trường không đúng định dạng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}



   
// Hàm xóa trắng các trường nhập liệu cho nhân viên
private void xoaTrang() {
    jTextFieldmaNhanVien2.setText("");       // Xóa mã nhân viên
    jTextFieldtenNhanVien2.setText("");      // Xóa tên nhân viên
    jTextFieldsoDienThoai2.setText("");      // Xóa số điện thoại
    jTextFielddiaChi.setText("");            // Xóa địa chỉ
    jRadioButtonNam.setSelected(false);      // Xóa lựa chọn giới tính Nam
    jRadioButtonNu.setSelected(false);       // Xóa lựa chọn giới tính Nữ
    jDateChooserNgaySinh.setDate(null);      // Xóa ngày sinh
}
// Hàm xóa nhân viên dựa trên dòng được chọn
private void xoa() {
    int selectedRow = jTableNhanVien.getSelectedRow(); // Lấy hàng được chọn 
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên cần xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Lấy mã nhân viên từ cột đầu tiên của dòng được chọn
    String maNhanVien = jTableNhanVien.getValueAt(selectedRow, 0).toString();

    // Xác nhận người dùng có chắc chắn muốn xóa nhân viên không
    if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa nhân viên này?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
        try {
            // Cập nhật trạng thái của nhân viên trong cơ sở dữ liệu
            NhanVien_DAO nhanVienDao = new NhanVien_DAO();
            nhanVienDao.capNhatTrangThaiNhanVien(maNhanVien, false); // Đặt trạng thái nhân viên là không hoạt động (false)

            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Đã xóa nhân viên thành công");

            // Cập nhật lại dữ liệu trên bảng giao diện
            docDuLieuVaoBangDSNV(); // Gọi hàm để cập nhật lại dữ liệu nhân viên lên bảng
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa nhân viên: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
}
// Hàm sửa thông tin nhân viên
private void sua() {
    int selectedRow = jTableNhanVien.getSelectedRow(); // Lấy hàng được chọn trên bảng
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn nhân viên cần sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Lấy thông tin từ các trường nhập liệu và cập nhật vào đối tượng NhanVien
        String maNhanVien = jTableNhanVien.getValueAt(selectedRow, 0).toString();
         String tenDayDu = jTextFieldtenNhanVien2.getText().trim(); // Loại bỏ khoảng trắng thừa
        String ho = "";
        String ten = "";
        

if (!tenDayDu.isEmpty()) {
    String[] parts = tenDayDu.split(" ", 2); // Tách chuỗi thành hai phần: Họ và phần còn lại
    ho = parts[0]; // Họ là phần đầu tiên
    if (parts.length > 1) {
        ten = parts[1]; // Tên là tất cả ký tự sau họ
    }
}
        
        String soDienThoai = jTextFieldsoDienThoai2.getText().trim();  // Số điện thoại từ giao diện
        String diaChi = jTextFielddiaChi.getText().trim(); // Địa chỉ từ giao diện
        Date ngaySinh = jDateChooserNgaySinh.getDate(); // Ngày sinh từ giao diện
        String gioiTinh = jRadioButtonNam.isSelected() ? "Nam" : "Nữ"; // Giới tính từ RadioButton
        
        // Tạo đối tượng NhanVien và gán giá trị
        NhanVien nhanVien = new NhanVien();
        nhanVien.setHo(ho);
        nhanVien.setTen(ten);
        nhanVien.setSoDienThoai(soDienThoai);
        nhanVien.setDiaChi(diaChi);
        nhanVien.setNgaySinh(ngaySinh);
        nhanVien.setGioiTinh(gioiTinh);

        // Cập nhật nhân viên trong cơ sở dữ liệu
        NhanVien_DAO nhanVienDao = new NhanVien_DAO();
        nhanVienDao.SuaThongTinNhanVien(nhanVien, maNhanVien);

        // Hiển thị thông báo và cập nhật lại bảng
        JOptionPane.showMessageDialog(this, "Đã sửa thành công thông tin nhân viên!");
        docDuLieuVaoBangDSNV(); // Cập nhật lại bảng dữ liệu
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi sửa thông tin nhân viên: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}


private void tim() {
    // Lấy giá trị từ các checkbox
    boolean timTheoMa = jCheckBoxmaNhanVien.isSelected();
    boolean timTheoTen = jCheckBoxtenNhanVien.isSelected();
    boolean timTheoSDT = jCheckBoxsoDienThoai.isSelected();

    // Lấy giá trị từ các text field tương ứng
    String maNhanVien = jTextFieldmaNhanVien.getText().trim();
    String tenNhanVien = jTextFieldtenNhanVien.getText().trim();
    String soDienThoai = jTextFieldsoDienThoai.getText().trim();

    // Kiểm tra điều kiện trước khi thực hiện tìm kiếm
    if (!timTheoMa && !timTheoTen && !timTheoSDT) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn ít nhất một tiêu chí tìm kiếm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (timTheoMa && maNhanVien.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập mã nhân viên!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (timTheoTen && tenNhanVien.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập tên nhân viên!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (timTheoSDT && soDienThoai.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập số điện thoại!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Gọi hàm DAO để tìm kiếm nhân viên dựa trên các tiêu chí
        NhanVien_DAO nhanVienDao = new NhanVien_DAO();
        List<NhanVien> dsTimKiem = nhanVienDao.timNhanVien(timTheoMa ? maNhanVien : null, timTheoTen ? tenNhanVien : null, timTheoSDT ? soDienThoai : null);

        // Hiển thị kết quả tìm kiếm trên bảng
        hienThiKetQuaTimKiem(dsTimKiem);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm nhân viên: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}

// Phương thức hiển thị kết quả tìm kiếm trên bảng
private void hienThiKetQuaTimKiem(List<NhanVien> dsTimKiem) {
    DefaultTableModel model = (DefaultTableModel) jTableNhanVien.getModel();
    model.setRowCount(0); // Xóa toàn bộ dữ liệu cũ trên bảng

    for (NhanVien nv : dsTimKiem) {
        model.addRow(new Object[]{
            nv.getMaNhanVien(),
            nv.getTen(),
            nv.getSoDienThoai(),
            nv.getDiaChi(),
            nv.getNgaySinh(),
            nv.getGioiTinh(),
        });
    }
}

// Hàm xuất Excel
private void xuatExcel() {
    try {
        // Tạo một workbook mới
        XSSFWorkbook workbook = new XSSFWorkbook();
        XSSFSheet sheet = workbook.createSheet("DanhSachNhanVien");
        XSSFRow row = null;
        Cell cell = null;

        // Tạo tiêu đề chính của bảng
        row = sheet.createRow(2);
        cell = row.createCell(0, CellType.STRING);
        cell.setCellValue("DANH SÁCH NHÂN VIÊN");
        // Hợp nhất các ô cho tiêu đề từ cột 0 đến cột 5
        sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 5));

        // Tạo kiểu căn giữa cho tiêu đề
        CellStyle titleStyle = workbook.createCellStyle();
        XSSFFont titleFont = workbook.createFont();
        titleFont.setBold(true);
        titleFont.setFontHeight(14); // Đặt kích thước font cho tiêu đề
        titleStyle.setFont(titleFont);
        titleStyle.setAlignment(HorizontalAlignment.CENTER); // Căn giữa theo chiều ngang
        titleStyle.setVerticalAlignment(VerticalAlignment.CENTER); // Căn giữa theo chiều dọc
        cell.setCellStyle(titleStyle);

        // Tạo tiêu đề cột cho bảng dữ liệu
        row = sheet.createRow(3);
        cell = row.createCell(0, CellType.STRING);
        cell.setCellValue("STT");

        cell = row.createCell(1, CellType.STRING);
        cell.setCellValue("Mã Nhân Viên");

        cell = row.createCell(2, CellType.STRING);
        cell.setCellValue("Tên Nhân Viên");

        cell = row.createCell(3, CellType.STRING);
        cell.setCellValue("Số Điện Thoại");

        cell = row.createCell(4, CellType.STRING);
        cell.setCellValue("Địa Chỉ");

        cell = row.createCell(5, CellType.STRING);
        cell.setCellValue("Ngày Sinh");

        cell = row.createCell(6, CellType.STRING);
        cell.setCellValue("Giới Tính");

        // Vòng lặp qua danh sách nhân viên để ghi dữ liệu vào bảng
        NhanVien_DAO nhanVienDao = new NhanVien_DAO();
        List<NhanVien> dsNhanVien = nhanVienDao.getAllNhanVien();
        for (int i = 0; i < dsNhanVien.size(); i++) {
            NhanVien nv = dsNhanVien.get(i); // Lấy thông tin nhân viên từ danh sách

            row = sheet.createRow(4 + i); // Tạo dòng mới cho mỗi nhân viên

            // Cột STT
            cell = row.createCell(0, CellType.NUMERIC);
            cell.setCellValue(i + 1);

            // Cột Mã Nhân Viên
            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue(nv.getMaNhanVien());

            // Cột Tên Nhân Viên
            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue(nv.getTen());

            // Cột Số Điện Thoại
            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue(nv.getSoDienThoai());

            // Cột Địa Chỉ
            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue(nv.getDiaChi());

            // Cột Ngày Sinh (giả sử `nv.getNgaySinh()` trả về đối tượng `Date`)
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue(dateFormat.format(nv.getNgaySinh()));

            // Cột Giới Tính
            cell = row.createCell(6, CellType.STRING);
            cell.setCellValue(nv.getGioiTinh());
        }

        // Tự động điều chỉnh kích thước các cột
        for (int i = 0; i <= 6; i++) {
            sheet.autoSizeColumn(i);
        }

        // Cho phép người dùng chọn đường dẫn và tên file
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Lưu file Excel");
        fileChooser.setSelectedFile(new File("DanhSachNhanVien.xlsx")); // Đặt tên mặc định cho file

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            try (FileOutputStream fos = new FileOutputStream(fileToSave)) {
                workbook.write(fos); // Ghi dữ liệu ra file
            }
            // Mở file Excel sau khi xuất thành công
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(fileToSave);
            }
            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Xuất file thành công tại " + fileToSave.getAbsolutePath());
        } else {
            JOptionPane.showMessageDialog(this, "Người dùng đã hủy hành động.");
        }
    } catch (FileNotFoundException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Không thể tạo file, vui lòng kiểm tra lại đường dẫn.");
    } catch (IOException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi xuất file.");
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi không xác định.");
    }
}


}
