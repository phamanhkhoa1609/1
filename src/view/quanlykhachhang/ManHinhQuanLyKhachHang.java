/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
// Nguyen Duc Hau 04/10/2024 
package view.quanlykhachhang;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import dao.KhachHang_DAO;
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import modal.KhachHang;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author ADMIN
 */
public class ManHinhQuanLyKhachHang extends javax.swing.JPanel {

    /**
     * Creates new form KhachHang
     */
  
    public ManHinhQuanLyKhachHang() {
        initComponents();
         docDuLieuVaoBangDSKH();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelmaKhachHang = new javax.swing.JLabel();
        jLabeltenKhachHang = new javax.swing.JLabel();
        jLabelsoDienThoai = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jTextFieldtenKhachHang = new javax.swing.JTextField();
        jTextFieldmaKhachHang = new javax.swing.JTextField();
        jTextFieldsoDienThoai = new javax.swing.JTextField();
        jCheckBoxmaKhachHang = new javax.swing.JCheckBox();
        jCheckBoxtenKhachHang = new javax.swing.JCheckBox();
        jCheckBoxsoDienThoai = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFielddiemTichLuy = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldmaKhachHang2 = new javax.swing.JTextField();
        jTextFieldsoDienThoai2 = new javax.swing.JTextField();
        jTextFieldtenKhachHang2 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXoaTrang = new javax.swing.JButton();
        btnXuatFileExcel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPaneKhachHang = new javax.swing.JScrollPane();
        jTableKhachHang = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelmaKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelmaKhachHang.setText("Mã khách hàng:");

        jLabeltenKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabeltenKhachHang.setText("Tên khách hàng:");

        jLabelsoDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelsoDienThoai.setText("Số điện thoại:");

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search (1) (1).png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jTextFieldtenKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldtenKhachHangActionPerformed(evt);
            }
        });

        jTextFieldmaKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldmaKhachHangActionPerformed(evt);
            }
        });

        jTextFieldsoDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldsoDienThoaiActionPerformed(evt);
            }
        });

        jCheckBoxmaKhachHang.setMaximumSize(new java.awt.Dimension(30, 30));
        jCheckBoxmaKhachHang.setMinimumSize(new java.awt.Dimension(30, 30));
        jCheckBoxmaKhachHang.setPreferredSize(new java.awt.Dimension(30, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabelmaKhachHang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldmaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxmaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabeltenKhachHang)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldtenKhachHang)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxtenKhachHang))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelsoDienThoai)
                                .addGap(40, 40, 40)
                                .addComponent(jTextFieldsoDienThoai, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCheckBoxsoDienThoai)))))
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxmaKhachHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelmaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldmaKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxtenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldtenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabeltenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelsoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTimKiem)
                .addGap(26, 26, 26))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Mã khách hàng:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Tên khách hàng:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Điểm tích lũy:");

        jTextFielddiemTichLuy.setEditable(false);
        jTextFielddiemTichLuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFielddiemTichLuyActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Số điện thoại:");

        jTextFieldmaKhachHang2.setEditable(false);
        jTextFieldmaKhachHang2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldmaKhachHang2ActionPerformed(evt);
            }
        });

        jTextFieldsoDienThoai2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldsoDienThoai2ActionPerformed(evt);
            }
        });

        jTextFieldtenKhachHang2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldtenKhachHang2ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/them.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/update.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xoanew.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXoaTrang.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoaTrang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xoanew2.png"))); // NOI18N
        btnXoaTrang.setText("Xóa trắng");
        btnXoaTrang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTrangActionPerformed(evt);
            }
        });

        btnXuatFileExcel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXuatFileExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/xuat.png"))); // NOI18N
        btnXuatFileExcel.setText("Xuất file excel");
        btnXuatFileExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXuatFileExcel)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnXoaTrang)
                    .addComponent(btnXuatFileExcel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refesh.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldtenKhachHang2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldmaKhachHang2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldsoDienThoai2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jTextFielddiemTichLuy, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldmaKhachHang2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldsoDienThoai2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldtenKhachHang2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFielddiemTichLuy, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jScrollPaneKhachHang.setBackground(new java.awt.Color(255, 255, 255));

        jTableKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Số điện thoại", "Điểm tích lũy", "Ngày tham gia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableKhachHang.setRowHeight(40);
        jTableKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableKhachHangMouseClicked(evt);
            }
        });
        jScrollPaneKhachHang.setViewportView(jTableKhachHang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPaneKhachHang)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTableKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableKhachHangMouseClicked
        // TODO add your handling code here:
       
        int row = jTableKhachHang.getSelectedRow();
    	    if (row != -1) {
    	        jTextFieldmaKhachHang2.setText(jTableKhachHang.getValueAt(row, 0).toString());
    	        jTextFieldtenKhachHang2.setText(jTableKhachHang.getValueAt(row, 1).toString());
    	        jTextFieldsoDienThoai2.setText(jTableKhachHang.getValueAt(row, 2).toString());
    	       jTextFielddiemTichLuy.setText(jTableKhachHang.getValueAt(row, 3).toString());     
    	    }
            
    }//GEN-LAST:event_jTableKhachHangMouseClicked

    private void jTextFieldsoDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldsoDienThoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldsoDienThoaiActionPerformed

    private void jTextFieldmaKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldmaKhachHangActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldmaKhachHangActionPerformed

    private void jTextFieldtenKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldtenKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldtenKhachHangActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        tim();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoa();
        docDuLieuVaoBangDSKH();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        sua();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        them();
    }//GEN-LAST:event_btnThemActionPerformed

    private void jTextFieldtenKhachHang2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldtenKhachHang2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldtenKhachHang2ActionPerformed

    private void jTextFieldsoDienThoai2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldsoDienThoai2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldsoDienThoai2ActionPerformed

    private void jTextFieldmaKhachHang2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldmaKhachHang2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldmaKhachHang2ActionPerformed

    private void jTextFielddiemTichLuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFielddiemTichLuyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFielddiemTichLuyActionPerformed

    private void btnXoaTrangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTrangActionPerformed
        // TODO add your handling code here:
        xoaTrang();
    }//GEN-LAST:event_btnXoaTrangActionPerformed

    private void btnXuatFileExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileExcelActionPerformed
        // TODO add your handling code here:
       xuatExcel();
    }//GEN-LAST:event_btnXuatFileExcelActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        docDuLieuVaoBangDSKH();
    }//GEN-LAST:event_jButton1ActionPerformed
    
// các chỉnh sửa thêm
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaTrang;
    private javax.swing.JButton btnXuatFileExcel;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBoxmaKhachHang;
    private javax.swing.JCheckBox jCheckBoxsoDienThoai;
    private javax.swing.JCheckBox jCheckBoxtenKhachHang;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelmaKhachHang;
    private javax.swing.JLabel jLabelsoDienThoai;
    private javax.swing.JLabel jLabeltenKhachHang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPaneKhachHang;
    private javax.swing.JTable jTableKhachHang;
    private javax.swing.JTextField jTextFielddiemTichLuy;
    private javax.swing.JTextField jTextFieldmaKhachHang;
    private javax.swing.JTextField jTextFieldmaKhachHang2;
    private javax.swing.JTextField jTextFieldsoDienThoai;
    private javax.swing.JTextField jTextFieldsoDienThoai2;
    private javax.swing.JTextField jTextFieldtenKhachHang;
    private javax.swing.JTextField jTextFieldtenKhachHang2;
    // End of variables declaration//GEN-END:variables
    
// Các hàm
    
// hàm đọc csdl vào bảng
   private void docDuLieuVaoBangDSKH() {
    // Lấy model của jTableKhachHang
    DefaultTableModel defaultTableModel = (DefaultTableModel) jTableKhachHang.getModel();
    
    // Đặt số lượng hàng trong bảng về 0
    defaultTableModel.setRowCount(0);
    
    // Cập nhật lại bảng
    jTableKhachHang.repaint();
    jTableKhachHang.revalidate();
    
    // Khởi tạo DAO để lấy dữ liệu
    KhachHang_DAO khachHangDao = new KhachHang_DAO();
    
    // Lấy danh sách khách hàng từ DAO
    List<KhachHang> khachHangs = khachHangDao.getAllKhachHang(); // Đảm bảo rằng phương thức này trả về danh sách khách hàng

    // Thêm từng khách hàng vào model
    for (KhachHang kh : khachHangs) {
        defaultTableModel.addRow(new Object[] {
            kh.getMaKhachHang(),       // Mã khách hàng
            kh.getTenKhachHang(),      // Tên khách hàng
            kh.getSoDienThoai(),       // Số điện thoại
            kh.getDiemTichLuy(),       // Điểm tích lũy
            kh.getNgayThamGia(),       // Ngày tham gia
          
        });
    }
}
// hàm sinh mã tự động
 // Phương thức tự động tạo mã khách hàng
public String generateMaKhachHang() {
    String maKhachHangMoi = "";
    KhachHang_DAO kh_Dao = new KhachHang_DAO();
    String maKhachHangCuoi = kh_Dao.layMaKhachHangCuoiDHAU(); // Lấy mã khách hàng cuối cùng từ cơ sở dữ liệu

    if (maKhachHangCuoi == null || maKhachHangCuoi.isEmpty()) {
        maKhachHangMoi = "KH001"; // Nếu chưa có khách hàng nào, gán mã KH001
    } else {
        try {
            int soLuong = Integer.parseInt(maKhachHangCuoi.substring(2)) + 1; // Lấy số sau "KH" và tăng lên 1
            maKhachHangMoi = String.format("KH%03d", soLuong); // Tạo mã mới theo định dạng KHxxx (xxx là số 3 chữ)
            
            // Kiểm tra mã mới có trùng với mã khách hàng trong CSDL không
            while (!checkMaKhachHang(maKhachHangMoi)) {
                soLuong++;
                maKhachHangMoi = String.format("KH%03d", soLuong); // Tiếp tục tăng số nếu mã trùng
            }

        } catch (NumberFormatException e) {
            e.printStackTrace(); // Xử lý lỗi nếu không thể chuyển đổi mã khách hàng
        }
    }
    return maKhachHangMoi; // Trả về mã khách hàng mới
}

  private boolean checkMaKhachHang(String maKhachHang) {
    KhachHang_DAO khachHangDao = new KhachHang_DAO();
    List<KhachHang> khachHangs = khachHangDao.getAllKhachHang(); // Lấy danh sách khách hàng

    // Kiểm tra mã khách hàng có trùng không
    for (KhachHang kh : khachHangs) {
        if (kh.getMaKhachHang().equals(maKhachHang)) {
            return false; // Mã khách hàng đã tồn tại
        }
    }
    return true; // Mã khách hàng chưa tồn tại
}
  private void them() {
    KhachHang_DAO khachHangDao = new KhachHang_DAO();
    List<KhachHang> khachHangs = khachHangDao.getAllKhachHang(); // Lấy danh sách khách hàng hiện tại

    // Tạo mã khách hàng mới
    String maKhachHang = generateMaKhachHang();

    // Lấy thông tin khách hàng từ giao diện
    String ten = jTextFieldtenKhachHang2.getText(); 
    String sdt = jTextFieldsoDienThoai2.getText(); 
    
    // Kiểm tra các trường nhập liệu
    if (ten.isEmpty() || sdt.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Tên khách hàng và số điện thoại không được để trống!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return; // Dừng hàm nếu có trường trống
    }

    // Lấy ngày tham gia
    Date ngayThamGiaDate = new Date(); 
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String ngayThamGiaString = sdf.format(ngayThamGiaDate);

    try {
        // Tạo đối tượng KhachHang và lưu thông tin
        KhachHang khachHang = new KhachHang();
        khachHang.setMaKhachHang(maKhachHang);
        khachHang.setTenKhachHang(ten);
        khachHang.setSoDienThoai(sdt);
        khachHang.setNgayThamGia(ngayThamGiaDate);

        // Thêm khách hàng vào cơ sở dữ liệu
        if (khachHangDao.themKhachHang(khachHang)) {
            khachHangs.add(khachHang);
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công!");
            docDuLieuVaoBangDSKH(); // Cập nhật bảng danh sách khách hàng
            xoaTrang(); // Xóa trắng các trường nhập liệu
        } else {
            JOptionPane.showMessageDialog(this, "Thêm khách hàng thất bại!");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Lỗi nhập trường không đúng định dạng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }
}



   
// hàm xóa trắng
   private void xoaTrang() {
    jTextFieldtenKhachHang2.setText("");
    jTextFieldsoDienThoai2.setText("");
    jTextFieldmaKhachHang2.setText("");
    jTextFielddiemTichLuy.setText("");
}
// hàm xóa
   // Hàm xóa khách hàng dựa trên dòng được chọn
private void xoa() {
    int selectedRow = jTableKhachHang.getSelectedRow(); // Lấy hàng được chọn 
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần xóa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Lấy mã khách hàng 
    String maKhachHang = jTableKhachHang.getValueAt(selectedRow, 0).toString();

    // Xác nhận người dùng có chắc chắn muốn xóa khách hàng không
    if (JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
        try {
            // Cập nhật trạng thái của khách hàng trong cơ sở dữ liệu
            KhachHang_DAO khachHangDao = new KhachHang_DAO();
            khachHangDao.capNhatTrangThaiKhachHang(maKhachHang, false);
            // Hiển thị thông báo thành công
            JOptionPane.showMessageDialog(this, "Đã xóa thành công");

            // Cập nhật lại dữ liệu trên bảng giao diện
            docDuLieuVaoBangDSKH();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa khách hàng: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }
}
// hàm sửa   
    private void sua() {
    int selectedRow = jTableKhachHang.getSelectedRow(); // Lấy hàng được chọn trên bảng
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng cần sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    try {
        // Lấy thông tin từ các trường nhập liệu và cập nhật vào đối tượng KhachHang
        String maKhachHang = jTableKhachHang.getValueAt(selectedRow, 0).toString();
        String tenKhachHang = jTextFieldtenKhachHang2.getText().trim(); // Tên khách hàng từ giao diện
        String soDienThoai = jTextFieldsoDienThoai2.getText().trim();  // Số điện thoại từ giao diện
        int diemTichLuy = Integer.parseInt(jTextFielddiemTichLuy.getText().trim()); // Điểm tích lũy

        // Tạo đối tượng KhachHang
//        KhachHang khachHang = new KhachHang(tenKhachHang, soDienThoai, diemTichLuy);
        KhachHang khachHang=new KhachHang();
        khachHang.setTenKhachHang(tenKhachHang);
        khachHang.setSoDienThoai(soDienThoai);
        khachHang.setDiemTichLuy(diemTichLuy);
        // Cập nhật khách hàng trong cơ sở dữ liệu
        KhachHang_DAO khachHangDao = new KhachHang_DAO();
       khachHangDao.SuaThongTinKhachHang(khachHang, maKhachHang);
        JOptionPane.showMessageDialog(this, "Đã sửa thành công thông tin khách hàng!");
        docDuLieuVaoBangDSKH(); // Cập nhật lại bảng
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi sửa thông tin khách hàng: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}

// hàm tìm    
private void tim() {
    // Lấy giá trị từ các checkbox
    boolean timTheoMa = jCheckBoxmaKhachHang.isSelected();
    boolean timTheoTen = jCheckBoxtenKhachHang.isSelected();
    boolean timTheoSDT = jCheckBoxsoDienThoai.isSelected();

    // Lấy giá trị từ các text field tương ứng
    String maKhachHang = jTextFieldmaKhachHang.getText().trim();
    String tenKhachHang = jTextFieldtenKhachHang.getText().trim();
    String soDienThoai = jTextFieldsoDienThoai.getText().trim();
     // Kiểm tra điều kiện trước khi thực hiện tìm kiếm
    if (!timTheoMa && !timTheoTen && !timTheoSDT) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn ít nhất một tiêu chí tìm kiếm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (timTheoMa && maKhachHang.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập mã khách hàng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (timTheoTen && tenKhachHang.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập tên khách hàng!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }

    if (timTheoSDT && soDienThoai.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập số điện thoại!", "Thông báo", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    // Xây dựng câu truy vấn dựa trên các tiêu chí đã chọn
        StringBuilder query = new StringBuilder("SELECT * FROM KhachHang WHERE trangThai = 1");
        if (timTheoMa && maKhachHang != null && !maKhachHang.isEmpty()) {
            query.append(" AND maKhachHang LIKE '%" + maKhachHang + "%' ");
        }
    if (timTheoTen && tenKhachHang != null && !tenKhachHang.isEmpty()) {
        query.append(" AND tenKhachHang LIKE '%" + tenKhachHang +"%'");
    }
    if (timTheoSDT && soDienThoai != null && !soDienThoai.isEmpty()) {
        query.append(" AND soDienThoai LIKE '%"+soDienThoai+"%'");
    }
    try {
        // Lấy danh sách khách hàng dựa trên câu truy vấn
        KhachHang_DAO khachHangDao = new KhachHang_DAO();
        List<KhachHang> dsTimKiem = khachHangDao.timKhachHang(query.toString());
        // Hiển thị kết quả tìm kiếm trên bảng
        hienThiKetQuaTimKiem(dsTimKiem);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi tìm kiếm khách hàng: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}

// Phương thức hiển thị kết quả tìm kiếm trên bảng
private void hienThiKetQuaTimKiem(List<KhachHang> dsTimKiem) {
    DefaultTableModel model = (DefaultTableModel) jTableKhachHang.getModel();
    model.setRowCount(0); // Xóa toàn bộ dữ liệu cũ trên bảng

    for (KhachHang kh : dsTimKiem) {
        model.addRow(new Object[]{
            kh.getMaKhachHang(),
            kh.getTenKhachHang(),
            kh.getSoDienThoai(),
            kh.getNgayThamGia(),
            kh.getDiemTichLuy(),
        });
    }
}


    // hàm xuất excel khách hàng
    private void xuatExcel(){
         try {
            // Tạo một workbook mới
                XSSFWorkbook workbook = new XSSFWorkbook();
                XSSFSheet sheet = workbook.createSheet("DanhSachKhachHang");
                XSSFRow row = null;
                Cell cell = null;

            // Tạo tiêu đề chính của bảng
            row = sheet.createRow(2);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("DANH SÁCH KHÁCH HÀNG");
             // Hợp nhất các ô cho tiêu đề từ cột 0 đến cột 5
            sheet.addMergedRegion(new CellRangeAddress(2, 2, 0, 5));

            // Tạo kiểu căn giữa cho tiêu đề
             CellStyle titleStyle = workbook.createCellStyle();
             XSSFFont titleFont = workbook.createFont();
            titleFont.setBold(true);
            titleFont.setFontHeight(14); // Đặt kích thước font cho tiêu đề
            titleStyle.setFont(titleFont);
            titleStyle.setAlignment(HorizontalAlignment.CENTER.CENTER); // Căn giữa theo chiều ngang
            titleStyle.setVerticalAlignment(VerticalAlignment.CENTER); // Căn giữa theo chiều dọc
            cell.setCellStyle(titleStyle);

            // Tạo tiêu đề cột cho bảng dữ liệu
            row = sheet.createRow(3);
            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã Khách Hàng");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Tên Khách Hàng");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Số Điện Thoại");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Ngày tham gia");
            cell = row.createCell(5, CellType.STRING);
            cell.setCellValue("Điểm tích lũy");

            // Vòng lặp qua danh sách khách hàng để ghi dữ liệu vào bảng
            KhachHang_DAO khachHangDao=new KhachHang_DAO();
            List<KhachHang> khachHangs= khachHangDao.getAllKhachHang();
             for (int i = 0; i < khachHangs.size(); i++) {
                KhachHang kh = khachHangs.get(i); // Lấy thông tin khách hàng từ danh sách
                
                if(kh.getNgayThamGia() == null){
                    continue;
                }

                row = sheet.createRow(4 + i); // Tạo dòng mới cho mỗi khách hàng

                // Cột STT
                cell = row.createCell(0, CellType.NUMERIC);
                cell.setCellValue(i + 1);

                // Cột Mã Khách Hàng
                cell = row.createCell(1, CellType.STRING);
                cell.setCellValue(kh.getMaKhachHang());

                // Cột Tên Khách Hàng
                cell = row.createCell(2, CellType.STRING);
                cell.setCellValue(kh.getTenKhachHang());

                // Cột Số Điện Thoại
                cell = row.createCell(3, CellType.STRING);
                cell.setCellValue(kh.getSoDienThoai());

                // Cột Ngày tham gia (giả sử `kh.getNgayThamGia()` trả về đối tượng `Date`)
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                cell = row.createCell(4, CellType.STRING);
                cell.setCellValue(dateFormat.format(kh.getNgayThamGia()));

                // Cột Điểm tích lũy
                cell = row.createCell(5, CellType.NUMERIC);
                cell.setCellValue(kh.getDiemTichLuy());
            }
            // Tự động điều chỉnh kích thước các cột
            for (int i = 0; i <= 5; i++) {
                sheet.autoSizeColumn(i);
            }
             // Cho phép người dùng chọn đường dẫn và tên file
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Lưu file Excel");
            fileChooser.setSelectedFile(new File("DanhSachKhachHang.xlsx")); // Đặt tên mặc định cho file

            int userSelection = fileChooser.showSaveDialog(this);
            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                try (FileOutputStream fos = new FileOutputStream(fileToSave)) {
                    workbook.write(fos); // Ghi dữ liệu ra file
                }
                // Mở file Excel sau khi xuất thành công
                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(fileToSave);
                }
                // Hiển thị thông báo thành công
                JOptionPane.showMessageDialog(this, "Xuất file thành công tại " + fileToSave.getAbsolutePath());
            } else {
                JOptionPane.showMessageDialog(this, "Người dùng đã hủy hành động.");
            }
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Không thể tạo file, vui lòng kiểm tra lại đường dẫn.");
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi xuất file.");
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi không xác định.");
        }
    }


}
