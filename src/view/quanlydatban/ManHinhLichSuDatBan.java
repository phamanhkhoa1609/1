/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.quanlydatban;


import com.toedter.calendar.JDateChooser;
import dao.BanAn_DAO;
import dao.HoaDon_DAO;
import java.awt.Dimension;
import java.awt.Font;
import java.sql.SQLException;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modal.HoaDon;

/**
 *
 * @author ADMIN
 */
public class ManHinhLichSuDatBan extends javax.swing.JPanel {
        DefaultTableModel tableModel;
       JDateChooser ngayDat, ngayHuy;
    /**
     * Creates new form ManHinhLichSuDatBan
     */
    public ManHinhLichSuDatBan() {
        initComponents();
 
        layHetDulieu();
             
        dateChooser();
    }
    
// Phương thức tải dữ liệu vào bảng
    private void layDuLieu(List<HoaDon> danhSachHoaDon) {
        DefaultTableModel model = (DefaultTableModel) tableLichSu.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ nếu có
        
        // Định dạng ngày giờ theo kiểu mình muốn
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm dd-MM-yyyy");
        
            // Thêm dữ liệu vào bảng
            for (HoaDon hoaDon : danhSachHoaDon) {
                Object[] row = {
                    model.getRowCount() + 1,
                    hoaDon.getBanAn().getMaBan(),
                    hoaDon.getKhachHang().getTenKhachHang(),
                    hoaDon.getKhachHang().getSoDienThoai(),
                    hoaDon.getNgayGioLap() != null ? hoaDon.getNgayGioLap().format(formatter) : "", // Kiểm tra nếu khác null thì chuyển sang định dạng mới, ngược lại thì để trống
                    hoaDon.getNgayHuyDat() != null ? hoaDon.getNgayHuyDat().format(formatter) : "",
                    hoaDon.getNgayGioNhanBan()!= null ? hoaDon.getNgayGioNhanBan().format(formatter) : "",
                    hoaDon.getTrangThaiThanhToan(),
                    hoaDon.getGhiChu(),
                    hoaDon.getNhanVien() != null ? ("Nhân viên " + hoaDon.getNhanVien().getHo() + " " + hoaDon.getNhanVien().getTen())
                        : ("Quản lý " + hoaDon.getQuanLy().getHo() + " " + hoaDon.getQuanLy().getTen())
                };
                model.addRow(row);
            }
   }
    
    //Lấy lịch sử đặt bàn trong 7 ngày gần nhất
   public void layHetDulieu(){
       try{
            HoaDon_DAO hoaDonDAO = new HoaDon_DAO();
            List<HoaDon> danhSachHoaDon = hoaDonDAO.layLichSuDatBanGanDay();
            layDuLieu(danhSachHoaDon);   
        } catch (SQLException e) {
            e.printStackTrace();
        }
   }
   
   public void dateChooser(){
       ngayDat = new JDateChooser();
       ngayHuy = new JDateChooser();
        
        ngayDat.getJCalendar().setLocale(new Locale("vi", "VN")); // Đặt ngôn ngữ tiếng Việt
        ngayHuy.getJCalendar().setLocale(new Locale("vi", "VN"));
        
        // Chỉ cho phép chọn, không được nhập
        ngayDat.getDateEditor().setEnabled(false);
        ngayHuy.getDateEditor().setEnabled(false);
        
        ngayDat.setFont(new Font("Arial", Font.BOLD, 14));
        ngayHuy.setFont(new Font("Arial", Font.BOLD, 14));
        
        ngayDat.setPreferredSize(new Dimension(180, 30));
        ngayHuy.setPreferredSize(new Dimension(180, 30));
        
        panelChonNgayDat.add(ngayDat);
        panelChonNgayDat.add(ngayHuy);
   }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTrangThaiRead = new javax.swing.ButtonGroup();
        buttonGroupTrangThaiChon = new javax.swing.ButtonGroup();
        panelWest = new javax.swing.JPanel();
        maBanLabel = new javax.swing.JLabel();
        maBanText = new javax.swing.JTextField();
        tenKhachHangLabel = new javax.swing.JLabel();
        soDienThoaiKhachHangLabel = new javax.swing.JLabel();
        ngayDatLabel = new javax.swing.JLabel();
        ngayNhanLabel = new javax.swing.JLabel();
        ghiChuLabel = new javax.swing.JLabel();
        tenKhachHangText = new javax.swing.JTextField();
        soDienThoaiText = new javax.swing.JTextField();
        ngayDatText = new javax.swing.JTextField();
        ngayHuyDatText = new javax.swing.JTextField();
        ghiChuText = new javax.swing.JTextArea();
        trangThaiLabel = new javax.swing.JLabel();
        radioDangXuLyRead = new javax.swing.JRadioButton();
        radioDaThanhToanRead = new javax.swing.JRadioButton();
        radioDaHuyRead = new javax.swing.JRadioButton();
        nguoiPTLabel = new javax.swing.JLabel();
        nguoiPTText = new javax.swing.JTextField();
        radioChuaThanhToanRead = new javax.swing.JRadioButton();
        ngayNhanBanLabel = new javax.swing.JLabel();
        ngayNhanBanText = new javax.swing.JTextField();
        huyDatButton = new javax.swing.JButton();
        panelCenter = new javax.swing.JPanel();
        panelCenterTop = new javax.swing.JPanel();
        panelLocTheoNgay = new javax.swing.JPanel();
        locTheoNgayDat = new javax.swing.JLabel();
        locTheoNgayHuy = new javax.swing.JLabel();
        locTheoNgayButton = new javax.swing.JButton();
        panelChonNgayDat = new javax.swing.JPanel();
        reloadButton = new javax.swing.JButton();
        BangLabel = new javax.swing.JLabel();
        locHomQuaButton = new javax.swing.JButton();
        locHomNayButton = new javax.swing.JButton();
        panelCenterBottom = new javax.swing.JPanel();
        panelLocTheoTrangThai = new javax.swing.JPanel();
        radioDangXuLy = new javax.swing.JRadioButton();
        radioDaThanhToan = new javax.swing.JRadioButton();
        radioDaHuy = new javax.swing.JRadioButton();
        locTheoTrangThaiButton = new javax.swing.JButton();
        radioChuaThanhToan = new javax.swing.JRadioButton();
        panelTimKiem = new javax.swing.JPanel();
        timKiemSDTLabel = new javax.swing.JLabel();
        timKiemMaBanText = new javax.swing.JTextField();
        timKiemButton = new javax.swing.JButton();
        timKiemSDT = new javax.swing.JTextField();
        timKiemMaBanLabel1 = new javax.swing.JLabel();
        panelCenterMid = new javax.swing.JPanel();
        scrollPaneLichSuDatBan = new javax.swing.JScrollPane();
        tableLichSu = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        panelWest.setBackground(new java.awt.Color(255, 255, 255));
        panelWest.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        panelWest.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelWest.setPreferredSize(new java.awt.Dimension(350, 500));

        maBanLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        maBanLabel.setText("Mã bàn:");

        maBanText.setEditable(false);
        maBanText.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        tenKhachHangLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tenKhachHangLabel.setText("Tên Khách hàng:");

        soDienThoaiKhachHangLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        soDienThoaiKhachHangLabel.setText("Số điện thoại:");

        ngayDatLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ngayDatLabel.setText("Ngày đặt:");

        ngayNhanLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ngayNhanLabel.setText("Ngày hủy:");

        ghiChuLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ghiChuLabel.setText("Ghi chú:");

        tenKhachHangText.setEditable(false);

        soDienThoaiText.setEditable(false);

        ngayDatText.setEditable(false);

        ngayHuyDatText.setEditable(false);

        ghiChuText.setEditable(false);
        ghiChuText.setColumns(5);
        ghiChuText.setRows(5);

        trangThaiLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        trangThaiLabel.setText("Trạng thái:");

        buttonGroupTrangThaiRead.add(radioDangXuLyRead);
        radioDangXuLyRead.setText("Đang xử lý");
        radioDangXuLyRead.setEnabled(false);

        buttonGroupTrangThaiRead.add(radioDaThanhToanRead);
        radioDaThanhToanRead.setText("Đã thanh toán");
        radioDaThanhToanRead.setEnabled(false);

        buttonGroupTrangThaiRead.add(radioDaHuyRead);
        radioDaHuyRead.setText("Đã hủy");
        radioDaHuyRead.setEnabled(false);

        nguoiPTLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        nguoiPTLabel.setText("Người phụ trách:");

        nguoiPTText.setEditable(false);

        buttonGroupTrangThaiRead.add(radioChuaThanhToanRead);
        radioChuaThanhToanRead.setText("Chưa thanh toán");
        radioChuaThanhToanRead.setEnabled(false);

        ngayNhanBanLabel.setText("Ngày nhận bàn:");

        ngayNhanBanText.setEditable(false);

        huyDatButton.setBackground(new java.awt.Color(255, 255, 204));
        huyDatButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        huyDatButton.setForeground(new java.awt.Color(255, 0, 0));
        huyDatButton.setText("Hủy đặt");
        huyDatButton.setEnabled(false);
        huyDatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huyDatButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelWestLayout = new javax.swing.GroupLayout(panelWest);
        panelWest.setLayout(panelWestLayout);
        panelWestLayout.setHorizontalGroup(
            panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelWestLayout.createSequentialGroup()
                        .addComponent(ngayDatLabel)
                        .addGap(192, 192, 192))
                    .addGroup(panelWestLayout.createSequentialGroup()
                        .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelWestLayout.createSequentialGroup()
                                .addComponent(maBanLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maBanText, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(huyDatButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelWestLayout.createSequentialGroup()
                                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ngayNhanBanLabel)
                                    .addComponent(trangThaiLabel))
                                .addGap(23, 23, 23)
                                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelWestLayout.createSequentialGroup()
                                        .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(radioDaThanhToanRead)
                                            .addComponent(radioDangXuLyRead)
                                            .addComponent(radioChuaThanhToanRead)
                                            .addComponent(radioDaHuyRead))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(ngayNhanBanText)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelWestLayout.createSequentialGroup()
                                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelWestLayout.createSequentialGroup()
                                        .addComponent(nguoiPTLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(nguoiPTText))
                                    .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelWestLayout.createSequentialGroup()
                                            .addComponent(ghiChuLabel)
                                            .addGap(45, 45, 45)
                                            .addComponent(ghiChuText, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelWestLayout.createSequentialGroup()
                                            .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(tenKhachHangLabel)
                                                .addComponent(soDienThoaiKhachHangLabel)
                                                .addComponent(ngayNhanLabel))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(tenKhachHangText, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(ngayHuyDatText, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(ngayDatText)
                                                .addComponent(soDienThoaiText, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 20, Short.MAX_VALUE))))
        );
        panelWestLayout.setVerticalGroup(
            panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWestLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maBanText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(huyDatButton))
                    .addComponent(maBanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nguoiPTText)
                    .addComponent(nguoiPTLabel))
                .addGap(7, 7, 7)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tenKhachHangLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tenKhachHangText))
                .addGap(18, 18, 18)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(soDienThoaiKhachHangLabel)
                    .addComponent(soDienThoaiText))
                .addGap(18, 18, 18)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ngayDatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ngayDatText))
                .addGap(18, 18, 18)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ngayNhanLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ngayHuyDatText))
                .addGap(18, 18, 18)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ngayNhanBanLabel)
                    .addComponent(ngayNhanBanText))
                .addGap(14, 14, 14)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trangThaiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelWestLayout.createSequentialGroup()
                        .addComponent(radioDangXuLyRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDaThanhToanRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioChuaThanhToanRead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDaHuyRead)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ghiChuText, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ghiChuLabel))
                .addContainerGap())
        );

        add(panelWest, java.awt.BorderLayout.LINE_START);

        panelCenter.setLayout(new java.awt.BorderLayout());

        panelCenterTop.setBackground(new java.awt.Color(255, 255, 255));
        panelCenterTop.setPreferredSize(new java.awt.Dimension(622, 150));
        panelCenterTop.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelLocTheoNgay.setBackground(new java.awt.Color(255, 255, 255));
        panelLocTheoNgay.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lọc theo ngày", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        panelLocTheoNgay.setPreferredSize(new java.awt.Dimension(442, 130));

        locTheoNgayDat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        locTheoNgayDat.setText("Ngày đặt: ");

        locTheoNgayHuy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        locTheoNgayHuy.setText("Ngày hủy:");

        locTheoNgayButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        locTheoNgayButton.setText("Lọc");
        locTheoNgayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locTheoNgayButtonActionPerformed(evt);
            }
        });

        panelChonNgayDat.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelLocTheoNgayLayout = new javax.swing.GroupLayout(panelLocTheoNgay);
        panelLocTheoNgay.setLayout(panelLocTheoNgayLayout);
        panelLocTheoNgayLayout.setHorizontalGroup(
            panelLocTheoNgayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocTheoNgayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLocTheoNgayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(locTheoNgayDat)
                    .addComponent(locTheoNgayHuy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelChonNgayDat, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(locTheoNgayButton)
                .addContainerGap())
        );
        panelLocTheoNgayLayout.setVerticalGroup(
            panelLocTheoNgayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocTheoNgayLayout.createSequentialGroup()
                .addGroup(panelLocTheoNgayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelChonNgayDat, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLocTheoNgayLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelLocTheoNgayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelLocTheoNgayLayout.createSequentialGroup()
                                .addComponent(locTheoNgayDat, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(locTheoNgayHuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelLocTheoNgayLayout.createSequentialGroup()
                                .addComponent(locTheoNgayButton)
                                .addGap(14, 14, 14)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        panelCenterTop.add(panelLocTheoNgay, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 12, 360, 110));

        reloadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/refesh.png"))); // NOI18N
        reloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadButtonActionPerformed(evt);
            }
        });
        panelCenterTop.add(reloadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, -1, -1));

        BangLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        BangLabel.setText("Danh Sách Lịch Sử Đặt Bàn");
        panelCenterTop.add(BangLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 120, -1, -1));

        locHomQuaButton.setText("Hôm Qua");
        locHomQuaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locHomQuaButtonActionPerformed(evt);
            }
        });
        panelCenterTop.add(locHomQuaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 43, -1, 40));

        locHomNayButton.setText("Hôm nay");
        locHomNayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locHomNayButtonActionPerformed(evt);
            }
        });
        panelCenterTop.add(locHomNayButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 43, -1, 40));

        panelCenter.add(panelCenterTop, java.awt.BorderLayout.PAGE_START);

        panelCenterBottom.setBackground(new java.awt.Color(255, 255, 255));
        panelCenterBottom.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelLocTheoTrangThai.setBackground(new java.awt.Color(255, 255, 255));
        panelLocTheoTrangThai.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lọc theo trạng thái", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        buttonGroupTrangThaiChon.add(radioDangXuLy);
        radioDangXuLy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioDangXuLy.setSelected(true);
        radioDangXuLy.setText("Đang xử lý");

        buttonGroupTrangThaiChon.add(radioDaThanhToan);
        radioDaThanhToan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioDaThanhToan.setText("Đã thanh toán");

        buttonGroupTrangThaiChon.add(radioDaHuy);
        radioDaHuy.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioDaHuy.setText("Đã hủy");

        locTheoTrangThaiButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        locTheoTrangThaiButton.setText("Lọc");
        locTheoTrangThaiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locTheoTrangThaiButtonActionPerformed(evt);
            }
        });

        buttonGroupTrangThaiChon.add(radioChuaThanhToan);
        radioChuaThanhToan.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        radioChuaThanhToan.setText("Chưa thanh toán");

        javax.swing.GroupLayout panelLocTheoTrangThaiLayout = new javax.swing.GroupLayout(panelLocTheoTrangThai);
        panelLocTheoTrangThai.setLayout(panelLocTheoTrangThaiLayout);
        panelLocTheoTrangThaiLayout.setHorizontalGroup(
            panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocTheoTrangThaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioDangXuLy)
                    .addComponent(radioDaThanhToan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioChuaThanhToan)
                    .addComponent(radioDaHuy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(locTheoTrangThaiButton)
                .addContainerGap())
        );
        panelLocTheoTrangThaiLayout.setVerticalGroup(
            panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLocTheoTrangThaiLayout.createSequentialGroup()
                .addGroup(panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLocTheoTrangThaiLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(locTheoTrangThaiButton))
                    .addGroup(panelLocTheoTrangThaiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioDangXuLy)
                            .addComponent(radioDaHuy))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLocTheoTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioDaThanhToan)
                            .addComponent(radioChuaThanhToan))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        panelCenterBottom.add(panelLocTheoTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 390, 100));

        panelTimKiem.setBackground(new java.awt.Color(255, 255, 255));
        panelTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        timKiemSDTLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        timKiemSDTLabel.setText("Tìm theo số điện thoại:");

        timKiemMaBanText.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        timKiemButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        timKiemButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search (1) (1).png"))); // NOI18N
        timKiemButton.setText("Tìm kiếm");
        timKiemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemButtonActionPerformed(evt);
            }
        });

        timKiemMaBanLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        timKiemMaBanLabel1.setText("Tìm theo mã bàn:");

        javax.swing.GroupLayout panelTimKiemLayout = new javax.swing.GroupLayout(panelTimKiem);
        panelTimKiem.setLayout(panelTimKiemLayout);
        panelTimKiemLayout.setHorizontalGroup(
            panelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timKiemSDTLabel)
                    .addComponent(timKiemMaBanLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timKiemSDT)
                    .addComponent(timKiemMaBanText, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(timKiemButton)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        panelTimKiemLayout.setVerticalGroup(
            panelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTimKiemLayout.createSequentialGroup()
                .addGroup(panelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timKiemSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timKiemSDTLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timKiemMaBanText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timKiemMaBanLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(panelTimKiemLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(timKiemButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCenterBottom.add(panelTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, 440, 100));

        panelCenter.add(panelCenterBottom, java.awt.BorderLayout.PAGE_END);

        panelCenterMid.setPreferredSize(new java.awt.Dimension(865, 220));

        scrollPaneLichSuDatBan.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPaneLichSuDatBan.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tableLichSu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã bàn", "Khách Hàng", "Số điện thoại", "Ngày đặt", "Ngày hủy", "Ngày nhận", "Trạng thái", "Ghi chú", "Người phụ trách"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableLichSu.setRowHeight(40);
        tableLichSu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableLichSuMouseClicked(evt);
            }
        });
        scrollPaneLichSuDatBan.setViewportView(tableLichSu);
        if (tableLichSu.getColumnModel().getColumnCount() > 0) {
            tableLichSu.getColumnModel().getColumn(0).setMinWidth(40);
            tableLichSu.getColumnModel().getColumn(0).setMaxWidth(40);
            tableLichSu.getColumnModel().getColumn(1).setMinWidth(55);
            tableLichSu.getColumnModel().getColumn(1).setMaxWidth(55);
            tableLichSu.getColumnModel().getColumn(2).setMinWidth(100);
            tableLichSu.getColumnModel().getColumn(2).setMaxWidth(120);
            tableLichSu.getColumnModel().getColumn(3).setMinWidth(85);
            tableLichSu.getColumnModel().getColumn(3).setMaxWidth(85);
            tableLichSu.getColumnModel().getColumn(4).setMinWidth(80);
            tableLichSu.getColumnModel().getColumn(4).setMaxWidth(80);
            tableLichSu.getColumnModel().getColumn(5).setMinWidth(80);
            tableLichSu.getColumnModel().getColumn(5).setMaxWidth(80);
            tableLichSu.getColumnModel().getColumn(6).setMinWidth(80);
            tableLichSu.getColumnModel().getColumn(6).setMaxWidth(80);
            tableLichSu.getColumnModel().getColumn(7).setMinWidth(80);
            tableLichSu.getColumnModel().getColumn(7).setMaxWidth(80);
            tableLichSu.getColumnModel().getColumn(8).setMinWidth(60);
            tableLichSu.getColumnModel().getColumn(8).setMaxWidth(60);
            tableLichSu.getColumnModel().getColumn(9).setMinWidth(175);
            tableLichSu.getColumnModel().getColumn(9).setMaxWidth(175);
        }

        javax.swing.GroupLayout panelCenterMidLayout = new javax.swing.GroupLayout(panelCenterMid);
        panelCenterMid.setLayout(panelCenterMidLayout);
        panelCenterMidLayout.setHorizontalGroup(
            panelCenterMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneLichSuDatBan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE)
        );
        panelCenterMidLayout.setVerticalGroup(
            panelCenterMidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneLichSuDatBan, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
        );

        panelCenter.add(panelCenterMid, java.awt.BorderLayout.CENTER);

        add(panelCenter, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void reloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadButtonActionPerformed
        capNhat();
    }//GEN-LAST:event_reloadButtonActionPerformed

    public void capNhat(){
        layHetDulieu();
        
        radioDangXuLy.setSelected(true);
        huyDatButton.setEnabled(false);
        maBanText.setText("");
        tenKhachHangText.setText("");
        soDienThoaiText.setText("");
        ngayDatText.setText("");
        ngayHuyDatText.setText("");
        ngayNhanBanText.setText("");
        ghiChuText.setText("");
        nguoiPTText.setText("");
    }
    private void timKiemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemButtonActionPerformed
        String maBan = timKiemMaBanText.getText();
        String sdt = timKiemSDT.getText();
        
        if (maBan.isEmpty() && sdt.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tiêu chí tìm kiếm", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else if(!maBan.isEmpty() && !maBan.matches("^B\\d{4}$")){
            JOptionPane.showMessageDialog(this, "Mã bàn không hợp lệ! Định dạng: BYXXX, (Y là tầng 1 - 2 - hoặc 3)(X là số)", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else if(!sdt.isEmpty() && !sdt.matches("0\\d{9}")){
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ! Cần bắt đầu bằng số 0 và phải đủ 10 số.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        HoaDon_DAO hoaDonDAO = new HoaDon_DAO();
        List<HoaDon> danhSachHoaDon = null;
            try {
                danhSachHoaDon = hoaDonDAO.timKiemTheoMaBanVaSDT(maBan, sdt);
            } catch (SQLException ex) {
                Logger.getLogger(ManHinhLichSuDatBan.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        
        if(!danhSachHoaDon.isEmpty()){
            layDuLieu(danhSachHoaDon);
        }else{
            JOptionPane.showMessageDialog(this, "Không tìm thấy bất kỳ lịch sử đặt bàn nào với mã bàn " + maBan 
                    + "và Số điện thoại " + sdt, "Không tìm thấy", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_timKiemButtonActionPerformed

    private void tableLichSuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableLichSuMouseClicked
        int row = tableLichSu.getSelectedRow();
        if(row != -1){
            maBanText.setText(tableLichSu.getValueAt(row, 1).toString());
            tenKhachHangText.setText(tableLichSu.getValueAt(row, 2).toString());
            soDienThoaiText.setText(tableLichSu.getValueAt(row, 3).toString());
            ngayDatText.setText(tableLichSu.getValueAt(row, 4).toString());
            ngayHuyDatText.setText(tableLichSu.getValueAt(row, 5).toString());
            ngayNhanBanText.setText(tableLichSu.getValueAt(row, 6).toString());
           
            Object ghiChuValue = tableLichSu.getValueAt(row, 8);
            ghiChuText.setText(ghiChuValue!= null ? ghiChuValue.toString() : "");
            nguoiPTText.setText(tableLichSu.getValueAt(row, 9).toString());
            
            String trangThai = tableLichSu.getValueAt(row, 7).toString();
           
            if(trangThai.equals("Đang xử lý")){
                radioDangXuLyRead.setSelected(true);
                huyDatButton.setEnabled(true);
            }else if(trangThai.equals("Đã thanh toán")){
                radioDaThanhToanRead.setSelected(true);
                huyDatButton.setEnabled(false);
            }else if (trangThai.equals("Chưa thanh toán")){
                radioChuaThanhToanRead.setSelected(true);
                huyDatButton.setEnabled(false);
            }else{
                radioDaHuyRead.setSelected(true);
                huyDatButton.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tableLichSuMouseClicked

    private void locTheoTrangThaiButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locTheoTrangThaiButtonActionPerformed
        String trangThai = "";
        if(radioDangXuLy.isSelected()){
            trangThai = "Đang xử lý";
        }else if(radioDaThanhToan.isSelected()){
            trangThai = "Đã thanh toán";
        }else if(radioDaHuy.isSelected()){
            trangThai = "Đã hủy";
        }else if(radioChuaThanhToan.isSelected()){
            trangThai = "Chưa thanh toán";
        }
        
        HoaDon_DAO hoaDonDAO = new HoaDon_DAO();
  
        List<HoaDon> danhSachHoaDon = null;
            try {
                danhSachHoaDon = hoaDonDAO.locTheoTrangThai(trangThai);
            } catch (SQLException ex) {
                Logger.getLogger(ManHinhLichSuDatBan.class.getName()).log(Level.SEVERE, null, ex);
            }
        layDuLieu(danhSachHoaDon);
    }//GEN-LAST:event_locTheoTrangThaiButtonActionPerformed

    private void locTheoNgayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locTheoNgayButtonActionPerformed
        Date ngayDatBan = ngayDat.getDate();
        Date ngayHuyBan = ngayHuy.getDate();

        HoaDon_DAO hoaDonDAO = new HoaDon_DAO();

       
        List<HoaDon> danhSachHoaDon = null;
            try {
                danhSachHoaDon = hoaDonDAO.locTheoNgay(ngayDatBan, ngayHuyBan);
            } catch (SQLException ex) {
                Logger.getLogger(ManHinhLichSuDatBan.class.getName()).log(Level.SEVERE, null, ex);
            }

        
        if (!danhSachHoaDon.isEmpty() && danhSachHoaDon != null) {
            layDuLieu(danhSachHoaDon);
        } else {
            // Nếu không tìm thấy, hiển thị thông báo
            JOptionPane.showMessageDialog(this, "Không tìm thấy lịch sử đặt bàn trong khoảng thời gian đã chọn.");
        }

        ngayDat.setDate(null);
        ngayHuy.setDate(null);
    }//GEN-LAST:event_locTheoNgayButtonActionPerformed

    private void huyDatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huyDatButtonActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn hủy đặt bàn?", "Xác nhận hủy", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            HoaDon_DAO hoaDon_DAO = new HoaDon_DAO();

            String trangThaiMoi = "Đã hủy";

            try {
                hoaDon_DAO.capNhatTrangThaiHoaDonSauKhiHuy(trangThaiMoi, maBanText.getText());
                JOptionPane.showMessageDialog(this, "Đã hủy đặt bàn!");
                capNhatTrangThaiBanAn("Trống");
                capNhat();
            } catch (SQLException ex) {
                Logger.getLogger(ManHinhThongTinBan.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!");
            }
        } else {
            return;
        }
    }//GEN-LAST:event_huyDatButtonActionPerformed

    private void locHomNayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locHomNayButtonActionPerformed
        HoaDon_DAO hoaDonDAO = new HoaDon_DAO();
        
        List<HoaDon> danhSachHoaDon = null;
            try {
                danhSachHoaDon = hoaDonDAO.locTheoNgayHomNay();
            } catch (SQLException ex) {
                Logger.getLogger(ManHinhLichSuDatBan.class.getName()).log(Level.SEVERE, null, ex);
            }
        layDuLieu(danhSachHoaDon);
    }//GEN-LAST:event_locHomNayButtonActionPerformed

    private void locHomQuaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locHomQuaButtonActionPerformed
        HoaDon_DAO hoaDonDAO = new HoaDon_DAO();
        
        List<HoaDon> danhSachHoaDon = null;
            try {
                danhSachHoaDon = hoaDonDAO.locTheoNgayHomQua();
            } catch (SQLException ex) {
                Logger.getLogger(ManHinhLichSuDatBan.class.getName()).log(Level.SEVERE, null, ex);
            }
        layDuLieu(danhSachHoaDon);
    }//GEN-LAST:event_locHomQuaButtonActionPerformed

    public void capNhatTrangThaiBanAn(String trangThai){
        String maBan = maBanText.getText();
        
        BanAn_DAO banAn_DAO = new BanAn_DAO();
        try{
            banAn_DAO.capNhatTrangThaiBan(maBan, trangThai);
        }catch(SQLException e){
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BangLabel;
    private javax.swing.ButtonGroup buttonGroupTrangThaiChon;
    private javax.swing.ButtonGroup buttonGroupTrangThaiRead;
    private javax.swing.JLabel ghiChuLabel;
    private javax.swing.JTextArea ghiChuText;
    private javax.swing.JButton huyDatButton;
    private javax.swing.JButton locHomNayButton;
    private javax.swing.JButton locHomQuaButton;
    private javax.swing.JButton locTheoNgayButton;
    private javax.swing.JLabel locTheoNgayDat;
    private javax.swing.JLabel locTheoNgayHuy;
    private javax.swing.JButton locTheoTrangThaiButton;
    private javax.swing.JLabel maBanLabel;
    private javax.swing.JTextField maBanText;
    private javax.swing.JLabel ngayDatLabel;
    private javax.swing.JTextField ngayDatText;
    private javax.swing.JTextField ngayHuyDatText;
    private javax.swing.JLabel ngayNhanBanLabel;
    private javax.swing.JTextField ngayNhanBanText;
    private javax.swing.JLabel ngayNhanLabel;
    private javax.swing.JLabel nguoiPTLabel;
    private javax.swing.JTextField nguoiPTText;
    private javax.swing.JPanel panelCenter;
    private javax.swing.JPanel panelCenterBottom;
    private javax.swing.JPanel panelCenterMid;
    private javax.swing.JPanel panelCenterTop;
    private javax.swing.JPanel panelChonNgayDat;
    private javax.swing.JPanel panelLocTheoNgay;
    private javax.swing.JPanel panelLocTheoTrangThai;
    private javax.swing.JPanel panelTimKiem;
    private javax.swing.JPanel panelWest;
    private javax.swing.JRadioButton radioChuaThanhToan;
    private javax.swing.JRadioButton radioChuaThanhToanRead;
    private javax.swing.JRadioButton radioDaHuy;
    private javax.swing.JRadioButton radioDaHuyRead;
    private javax.swing.JRadioButton radioDaThanhToan;
    private javax.swing.JRadioButton radioDaThanhToanRead;
    private javax.swing.JRadioButton radioDangXuLy;
    private javax.swing.JRadioButton radioDangXuLyRead;
    private javax.swing.JButton reloadButton;
    private javax.swing.JScrollPane scrollPaneLichSuDatBan;
    private javax.swing.JLabel soDienThoaiKhachHangLabel;
    private javax.swing.JTextField soDienThoaiText;
    private javax.swing.JTable tableLichSu;
    private javax.swing.JLabel tenKhachHangLabel;
    private javax.swing.JTextField tenKhachHangText;
    private javax.swing.JButton timKiemButton;
    private javax.swing.JLabel timKiemMaBanLabel1;
    private javax.swing.JTextField timKiemMaBanText;
    private javax.swing.JTextField timKiemSDT;
    private javax.swing.JLabel timKiemSDTLabel;
    private javax.swing.JLabel trangThaiLabel;
    // End of variables declaration//GEN-END:variables
}
